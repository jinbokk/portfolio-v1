"use client";

import { useMotionValue } from "framer-motion";
import { useEffect, useState, MouseEvent } from "react";
import Sidebar from "@/components/Sidebar";
import "./globals.css";

import { Roboto_Mono, Inconsolata, Inter } from "next/font/google";
import { usePathname } from "next/navigation";
import SplashScreen from "@/components/SplashScreen";
import Logo from "@/components/Logo";
import Mouse from "@/util/Mouse";

const inter = Inter({
  subsets: ["latin"],
  weight: "400",
  variable: "--font-inter",
});

const roboto_mono = Roboto_Mono({
  subsets: ["latin"],
  weight: ["500", "600", "700"],
  variable: "--font-roboto-mono",
});

const inconsolata = Inconsolata({
  subsets: ["latin"],
  weight: ["500", "600", "700"],
  variable: "--font-inconsolata",
});

export const metadata = {
  title: "Lee Jinbok's Portfolio Website",
  description: "Generated by create next.js (v13.4.5) app",
  keywords: ["jinbok", "leejinbok", "진복", "이진복"],
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  //* Splash Screen
  const pathname: string = usePathname();
  const isHome: boolean = pathname === "/";
  const [isLoading, setIsLoading] = useState<boolean>(isHome);

  useEffect(() => {
    if (isLoading) return;
  }, [isLoading]);

  //* Mouse
  let mouseX = useMotionValue(0);
  let mouseY = useMotionValue(0);

  function handleMouseMove({ currentTarget, clientX, clientY }: MouseEvent) {
    let { left, top } = currentTarget.getBoundingClientRect();
    mouseX.set(clientX - left);
    mouseY.set(clientY - top);
  }

  return (
    <html lang="ko">
      <body
        className={`${inter.variable} ${inconsolata.variable} ${roboto_mono.variable}`}
      >
        {isLoading && isHome ? (
          <SplashScreen setIsLoading={setIsLoading} />
        ) : (
          <div className="relative" onMouseMove={handleMouseMove}>
            <Mouse mouseX={mouseX} mouseY={mouseY} />
            <Logo />
            <Sidebar />
            <main className="relative z-40">{children}</main>
          </div>
        )}
      </body>
    </html>
  );
}
